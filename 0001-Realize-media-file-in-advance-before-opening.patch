From 4cef814daf6b501bcd8c78dabc01a3406aa5fcf4 Mon Sep 17 00:00:00 2001
From: Ivan Molodetskikh <yalterz@gmail.com>
Date: Wed, 2 Oct 2024 11:04:35 +0300
Subject: [PATCH] Realize media file in advance, before opening

Works around a GTK bug where opening the file before realizing fails to
initialize GL in GStreamer. This is pretty bad on its own, however, in
GTK 4.16.2 it's made much worse by a memory leak in the non-GL GStreamer
path.

https://gitlab.gnome.org/GNOME/gtk/-/issues/4184
---
 src/application.rs   |  4 ++++
 src/video_preview.rs | 43 +++++++++++++++++++++++++++++++++++++++----
 src/window.rs        | 11 ++++++++++-
 3 files changed, 53 insertions(+), 5 deletions(-)

diff --git a/src/application.rs b/src/application.rs
index 122ccf19fb..c3aa4780c7 100644
--- a/src/application.rs
+++ b/src/application.rs
@@ -46,6 +46,10 @@ mod imp {
             let window = VtWindow::new(self.obj().upcast_ref(), self.output_file.take());
 
             if let Some(file) = self.input_file.take() {
+                // Realize the window right away, before it's shown, so that the media file can
+                // start loading right away.
+                window.realize();
+
                 window.open(file);
             } else {
                 window.present();
diff --git a/src/video_preview.rs b/src/video_preview.rs
index b1b8e48945..f81deb491b 100644
--- a/src/video_preview.rs
+++ b/src/video_preview.rs
@@ -6,7 +6,11 @@ mod imp {
     use crate::{config::G_LOG_DOMAIN, timeline::VtTimeline};
     use glib::{subclass::Signal, warn, Properties};
     use gtk::{glib, prelude::*, subclass::prelude::*, CompositeTemplate};
-    use std::{cell::OnceCell, marker::PhantomData, sync::OnceLock};
+    use std::{
+        cell::{OnceCell, RefCell},
+        marker::PhantomData,
+        sync::OnceLock,
+    };
 
     #[derive(Debug, Default, CompositeTemplate, Properties)]
     #[properties(wrapper_type = super::VtVideoPreview)]
@@ -37,6 +41,7 @@ mod imp {
         is_playing: PhantomData<bool>,
 
         media_file: OnceCell<gtk::MediaFile>,
+        file: RefCell<Option<gio::File>>,
     }
 
     #[glib::object_subclass]
@@ -218,7 +223,29 @@ mod imp {
         }
     }
 
-    impl WidgetImpl for VtVideoPreview {}
+    impl WidgetImpl for VtVideoPreview {
+        fn realize(&self) {
+            self.parent_realize();
+
+            let obj = &*self.obj();
+            let surface = obj.native().unwrap().surface().unwrap();
+            let media_file = self.media_file.get().unwrap();
+            media_file.realize(&surface);
+
+            if let Some(file) = &*self.file.borrow() {
+                media_file.set_file(Some(file));
+            }
+        }
+
+        fn unrealize(&self) {
+            let obj = &*self.obj();
+            let surface = obj.native().unwrap().surface().unwrap();
+            let media_file = self.media_file.get().unwrap();
+            media_file.unrealize(&surface);
+
+            self.parent_unrealize();
+        }
+    }
 
     impl VtVideoPreview {
         fn duration(&self) -> i64 {
@@ -240,8 +267,16 @@ mod imp {
         }
 
         pub fn open(&self, file: &gio::File) {
-            let media_file = self.media_file.get().unwrap();
-            media_file.set_file(Some(file));
+            let obj = &*self.obj();
+
+            self.file.replace(Some(file.clone()));
+
+            if obj.is_realized() {
+                let surface = obj.native().unwrap().surface().unwrap();
+                let media_file = self.media_file.get().unwrap();
+                media_file.realize(&surface);
+                media_file.set_file(Some(file));
+            }
         }
 
         pub fn set_start_end(&self, start_end: Option<(u32, u32)>) {
diff --git a/src/window.rs b/src/window.rs
index ed34a44bde..4a249babdd 100644
--- a/src/window.rs
+++ b/src/window.rs
@@ -1081,7 +1081,16 @@ Please choose another file.",
         }
     }
 
-    impl WidgetImpl for VtWindow {}
+    impl WidgetImpl for VtWindow {
+        fn realize(&self) {
+            self.parent_realize();
+
+            // Realize the video preview right away, even though it's hidden, so that the media
+            // file can start loading right away.
+            self.video_preview.realize();
+        }
+    }
+
     impl WindowImpl for VtWindow {}
     impl ApplicationWindowImpl for VtWindow {}
     impl AdwApplicationWindowImpl for VtWindow {}
-- 
2.46.2

